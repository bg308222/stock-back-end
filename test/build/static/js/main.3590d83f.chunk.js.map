{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["MethodEnum","PriceTypeEnum","TimeRestrictiomEnum","host","sendOrder","body","a","axios","post","investorId","stockId","getDisplay","get","params","page","App","useState","ROD","timeRestriction","setTimeRestriction","quantity","setQuantity","displayData","setDisplayData","useEffect","setInterval","then","detail","data","content","className","type","name","id","value","onChange","target","IOC","FOK","style","display","flexDirection","b","l","map","index","flex","textAlign","onClick","method","price","priceType","MARKET","Object","entries","sort","tickQuantity","matchPrice","LIMIT","borderRight","borderLeft","order","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3590d83f.chunk.js","sourcesContent":["import \"./App.scss\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport enum MethodEnum {\n  BUY = 0,\n  SELL = 1,\n  CANCEL = 2,\n  UPDATE = 3,\n}\n\nexport enum PriceTypeEnum {\n  MARKET = 0,\n  LIMIT = 1,\n}\n\nexport enum TimeRestrictiomEnum {\n  ROD = 0,\n  IOC = 1,\n  FOK = 2,\n}\n\nconst host = \"http://220.141.212.175:8080/\";\n\ninterface IOrderBody {\n  investorId: number;\n  stockId: number;\n  method: MethodEnum;\n  price: number;\n  quantity: number;\n  priceType: PriceTypeEnum;\n  timeRestriction: TimeRestrictiomEnum;\n}\n\nconst sendOrder = async (body: Omit<IOrderBody, \"investorId\" | \"stockId\">) => {\n  return axios.post(host + \"api/order\", {\n    ...body,\n    investorId: 1,\n    stockId: 1,\n  });\n};\n\nconst getDisplay = async () => {\n  return axios.get(host + \"api/display\", {\n    params: {\n      stockId: 1,\n      page: '{\"page\":1,\"pageSize\":1}',\n    },\n  });\n};\n\nfunction App() {\n  const [timeRestriction, setTimeRestriction] = useState<TimeRestrictiomEnum>(\n    TimeRestrictiomEnum.ROD\n  );\n  const [quantity, setQuantity] = useState(1);\n  const [displayData, setDisplayData] = useState<any>();\n  useEffect(() => {\n    setInterval(async () => {\n      await getDisplay().then(\n        ({\n          data: {\n            content: [detail],\n          },\n        }) => {\n          setDisplayData(detail);\n        }\n      );\n    }, 100);\n  }, []);\n  return (\n    <div className=\"App\">\n      <input\n        type=\"number\"\n        name=\"quantity\"\n        id=\"quantity\"\n        value={quantity}\n        onChange={({ target: { value } }) => {\n          setQuantity(+value);\n        }}\n      />\n      <select\n        name=\"timeRestriction\"\n        id=\"timeRestriction\"\n        value={timeRestriction}\n        onChange={({ target: { value } }) => {\n          setTimeRestriction(+value as unknown as TimeRestrictiomEnum);\n        }}\n      >\n        <option value={TimeRestrictiomEnum.ROD}>ROD</option>\n        <option value={TimeRestrictiomEnum.IOC}>IOC</option>\n        <option value={TimeRestrictiomEnum.FOK}>FOK</option>\n      </select>\n      {/* <button\n        onClick={async () => {\n          await getDisplay().then(\n            ({\n              data: {\n                content: [detail],\n              },\n            }) => {\n              setDisplayData(detail);\n            }\n          );\n        }}\n      >\n        check\n      </button> */}\n      <br />\n      <br />\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {displayData &&\n          [\n            { b: \"BUY\", l: \"buy\" },\n            { b: \"SELL\", l: \"sell\" },\n          ].map(({ b, l }, index) => {\n            return (\n              <div\n                key={index}\n                style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}\n              >\n                <button\n                  style={{ flex: 1, textAlign: \"center\" }}\n                  onClick={async () => {\n                    await sendOrder({\n                      method: MethodEnum[b as any] as unknown as MethodEnum,\n                      price: 0,\n                      quantity,\n                      priceType: PriceTypeEnum.MARKET,\n                      timeRestriction,\n                    });\n                  }}\n                >\n                  MARKET {b}\n                </button>\n                <br />\n                {Object.entries<number>(displayData[`${l}FiveTick`])\n                  .sort(([a], [b]) => {\n                    return +b - +a;\n                  })\n                  .map(([value, tickQuantity], index) => {\n                    return (\n                      <button\n                        key={index}\n                        className={\n                          displayData.matchPrice === +value ? \"current\" : \"\"\n                        }\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          flex: 1,\n                        }}\n                        onClick={async () => {\n                          await sendOrder({\n                            method: MethodEnum[\n                              b as any\n                            ] as unknown as MethodEnum,\n                            price: +value,\n                            quantity,\n                            priceType: PriceTypeEnum.LIMIT,\n                            timeRestriction,\n                          });\n                        }}\n                      >\n                        {l === \"buy\" ? (\n                          <div\n                            style={{\n                              flex: 1,\n                              borderRight: \"1px solid black\",\n                            }}\n                          >\n                            {tickQuantity}\n                          </div>\n                        ) : (\n                          <div\n                            style={{\n                              flex: 1,\n                              borderLeft: \"1px solid black\",\n                              order: 2,\n                            }}\n                          >\n                            {tickQuantity}\n                          </div>\n                        )}\n                        <div style={{ flex: 4 }}>{value}</div>\n                      </button>\n                    );\n                  })}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}